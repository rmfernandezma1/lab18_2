name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-api
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-ui
  VERSION: 1.0.0-${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'

    - name: Set version
      run: |
        cd api/Basic3TierAPI
        dotnet build /p:Version=${{ env.VERSION }}

    - name: Restore dependencies
      run: |
        cd api/Basic3TierAPI
        dotnet restore

    - name: Build
      run: |
        cd api/Basic3TierAPI
        dotnet build --no-restore

    - name: Test
      run: |
        cd api/Basic3TierAPI
        dotnet test --no-build --verbosity normal

    - name: Run Sonarube for frontend
      uses: SonarSource/sonarqube-scan-action@v4
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        file: ./api/Dockerfile
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ env.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./ui
        file: ./ui/Dockerfile
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ env.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

       
    #- name: Instalar SonarScanner para .NET
    #  run: |
    #    dotnet tool install --global dotnet-sonarscanner
    #    echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    #- name: Ejecutar an√°lisis SonarQube
    #  run: |
     #   dotnet sonarscanner begin /~/workraquel/"" /d:sonar.host.url="http://${{ secrets.SONAR_HOST_URL }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      #  dotnet build api/Basic3TierAPI/Basic3TierAPI.sln --configuration Release
       # dotnet sonarscanner end /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}"
    
