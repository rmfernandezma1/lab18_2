
name: CI/CD Pipeline Connect MV and Deploy

on: workflow_dispatch

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-api
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-ui
  VERSION: 1.0.0-${{ github.sha }}
  AZURE_SSH_USERNAME: ${{ secrets.AZURE_SSH_USERNAME }}
  AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
  AZURE_SSH_PRIVATE_KEY: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

jobs:

  deploy-to-azure:
      runs-on: ubuntu-latest
      #needs: docker-build-push

      steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ env.AZURE_SSH_PRIVATE_KEY }}

      - name: Copiar docker-compose.yml a la VM
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ env.AZURE_SSH_USERNAME }}@${{ env.AZURE_VM_IP }}:/home/${{ env.AZURE_SSH_USERNAME }}/docker-compose.yml

      - name: Conectar a la VM y ejecutar Docker Compose  (además instala docker-compose en la MV)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.AZURE_SSH_USERNAME }}@${{ env.AZURE_VM_IP }} << 'EOF'
            sudo apt-get update
            
            # Verificar si docker-compose está instalado antes de instalarlo
            if ! command -v docker-compose &> /dev/null; then
              sudo apt install -y docker-compose

            fi
            
            docker pull ${{ env.BACKEND_IMAGE }}:latest
            docker pull ${{ env.FRONTEND_IMAGE }}:latest
            cd /home/${{ env.AZURE_SSH_USERNAME }}
            docker-compose down -v
            docker-compose up -d
          EOF